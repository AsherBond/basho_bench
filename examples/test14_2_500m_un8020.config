%%
%% Run 80/20 get/put test against uniform distribution of keys - 500m keys, 1k values
%%

%% Run as fast as you can for a day
{mode, max}.
{report_interval, 1}. % sec, default was 10
%{duration, 240}.
{duration, 1440}.

%% Concurrency
{concurrent, 100}.

%% Set up bucket to use - configure with n_val=1
%% using riak_core_bucket:set_bucket(<<"b1">>,[{n_val,1}]).
%% from riak console
{riakc_pb_bucket, <<"b1">>}.
%{key_generator, {int_to_bin, {uniform_int, 500000000}}}.
{key_generator, {int_to_bin_littleendian,{uniform_int, 5000000000}}}.
{value_generator, {fixed_bin, 1000}}.
%{value_generator, {highly_compressible_bin, 2048}}.
{operations, [{get, 3}, {update, 1}]}. %% 80% get, 10% update (which is 50/50 get/put)

%% Riak connection info
%% {riakc_pb_ips, [ "10.0.24.16" ]}.
{riakc_pb_replies, default}.

%% Setup cruft
{driver, basho_bench_driver_riakc_pb}.
{code_paths, ["deps/riakc",
              "deps/protobuffs"]}.
